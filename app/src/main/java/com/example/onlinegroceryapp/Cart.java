package com.example.onlinegroceryapp;import android.app.NotificationChannel;import android.app.NotificationManager;import android.os.Build;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.core.app.NotificationCompat;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import com.example.onlinegroceryapp.adapter.CartViewAdapter;import com.example.onlinegroceryapp.model.Orders;import com.example.onlinegroceryapp.model.UserManager;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import java.util.ArrayList;import java.util.List;public class Cart extends AppCompatActivity {    TextView Total;    Button btnPlaceorder;    String grandTotal;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_cart);        Total = findViewById(R.id.total);        String userId = UserManager.getUserEmail();        Log.d("CartActivity", "UserId: " + userId);        if (userId != null) {            List<Orders> ordersList = new ArrayList<>();            CartViewAdapter cartViewAdapter = new CartViewAdapter(Cart.this, ordersList);            RecyclerView cartRecycler = findViewById(R.id.cartRecycler);            cartRecycler.setLayoutManager(new LinearLayoutManager(Cart.this));            cartRecycler.setAdapter(cartViewAdapter);            DatabaseReference cartReference = FirebaseDatabase.getInstance().getReference("users")                    .child(userId)                    .child("Cart Facility");            cartReference.addValueEventListener(new ValueEventListener() {                @Override                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                    ordersList.clear();                    for (DataSnapshot itemSnapshot : dataSnapshot.getChildren()) {                        Orders orders = itemSnapshot.getValue(Orders.class);                        ordersList.add(orders);                    }                    cartViewAdapter.notifyDataSetChanged();                }                @Override                public void onCancelled(@NonNull DatabaseError databaseError) {                    Toast.makeText(Cart.this, "DB Error", Toast.LENGTH_SHORT).show();                }            });        } else {            // Handle the case where userId is null            Toast.makeText(this, "Invalid user information", Toast.LENGTH_SHORT).show();            finish(); // Close the activity or navigate to an appropriate screen            return; // Add a return statement to avoid executing the code below if userId is null        }        DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference("users").child(userId);        databaseReference.addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot snapshot) {                // Get the updated value of "Grand Total" from the snapshot                String grandTotal = snapshot.child("Grand Total").getValue(String.class);                // Update the TextView with the new value                if (!snapshot.exists()){                    Total.setText("0");                }                else{                    Total.setText(grandTotal);                }            }            @Override            public void onCancelled(@NonNull DatabaseError error) {                // Handle any errors that occur during the data retrieval process                Log.e("Firebase", "Error fetching Grand Total: " + error.getMessage());            }        });        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {            // Create the NotificationChannel with a unique ID, name, and importance level            CharSequence name = "My Notification Channel";            String description = "My Notification Channel Description";            int importance = NotificationManager.IMPORTANCE_DEFAULT;            NotificationChannel channel = new NotificationChannel("channel_id", name, importance);            channel.setDescription(description);            // Register the channel with the system; you can't change the importance or other notification behaviors after this            NotificationManager notificationManager = getSystemService(NotificationManager.class);            notificationManager.createNotificationChannel(channel);        }    }    @Override    protected void onStart() {        super.onStart();        String userId = UserManager.getUserEmail();        DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference("users").child(userId);        databaseReference.addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot snapshot) {                grandTotal = snapshot.child("Grand Total").getValue(String.class);                if (!snapshot.exists()) {                    Total.setText("0");                } else {                    Total.setText(grandTotal);                }            }            @Override            public void onCancelled(@NonNull DatabaseError error) {                Log.e("Firebase", "Error fetching Grand Total: " + error.getMessage());            }        });    }    public void createNotification(View view) {        if (grandTotal != null) {            // Build the notification            NotificationCompat.Builder builder = new NotificationCompat.Builder(this, "channel_id")                    .setSmallIcon(R.drawable.johnny_automatic_broccoli)                    .setContentTitle("Order Noted")                    .setContentText("We Will Reach You Soon ! Get ready Your Cash of Amount Rs. " + grandTotal +" ! ")                    .setStyle(new NotificationCompat.BigTextStyle()                            .bigText("We Will Reach You Soon ! Get ready Your Cash of Amount Rs. " + grandTotal +" ! Payment Method Is COD for Now"))                    .setPriority(NotificationCompat.PRIORITY_HIGH)                    .setAutoCancel(true);            // Show the notification            NotificationManager notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);            notificationManager.notify(0, builder.build());        } else {            Toast.makeText(this, "Grand Total is not available", Toast.LENGTH_SHORT).show();        }    }}